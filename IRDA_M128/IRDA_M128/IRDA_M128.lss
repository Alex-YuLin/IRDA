
IRDA_M128.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  000008cc  00000960  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  00800114  00800114  00000974  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000974  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  000009e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000279  00000000  00000000  00000a60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000162f  00000000  00000000  00000cd9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000c8e  00000000  00000000  00002308  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000df3  00000000  00000000  00002f96  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000002a4  00000000  00000000  00003d8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000789  00000000  00000000  00004030  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000079f  00000000  00000000  000047b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000048  00000000  00000000  00004f58  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	24 c1       	rjmp	.+584    	; 0x286 <__vector_15>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec ec       	ldi	r30, 0xCC	; 204
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 31       	cpi	r26, 0x14	; 20
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e1       	ldi	r26, 0x14	; 20
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 33       	cpi	r26, 0x30	; 48
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	be d3       	rcall	.+1916   	; 0x840 <main>
  c4:	01 c4       	rjmp	.+2050   	; 0x8c8 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <stdio_putchar>:
  c8:	1f 93       	push	r17
  ca:	18 2f       	mov	r17, r24
  cc:	8a 30       	cpi	r24, 0x0A	; 10
  ce:	11 f4       	brne	.+4      	; 0xd4 <stdio_putchar+0xc>
  d0:	8d e0       	ldi	r24, 0x0D	; 13
  d2:	fa df       	rcall	.-12     	; 0xc8 <stdio_putchar>
  d4:	5d 9b       	sbis	0x0b, 5	; 11
  d6:	fe cf       	rjmp	.-4      	; 0xd4 <stdio_putchar+0xc>
  d8:	1c b9       	out	0x0c, r17	; 12
  da:	80 e0       	ldi	r24, 0x00	; 0
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	1f 91       	pop	r17
  e0:	08 95       	ret

000000e2 <stdio_getchar>:
  e2:	1f 93       	push	r17
  e4:	bc 01       	movw	r22, r24
  e6:	5f 9b       	sbis	0x0b, 7	; 11
  e8:	fe cf       	rjmp	.-4      	; 0xe6 <stdio_getchar+0x4>
  ea:	1c b1       	in	r17, 0x0c	; 12
  ec:	81 2f       	mov	r24, r17
  ee:	ec df       	rcall	.-40     	; 0xc8 <stdio_putchar>
  f0:	81 2f       	mov	r24, r17
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	1f 91       	pop	r17
  f6:	08 95       	ret

000000f8 <DIO_fpt>:
  f8:	38 2f       	mov	r19, r24
  fa:	84 30       	cpi	r24, 0x04	; 4
  fc:	10 f0       	brcs	.+4      	; 0x102 <DIO_fpt+0xa>
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	08 95       	ret
 102:	48 30       	cpi	r20, 0x08	; 8
 104:	10 f0       	brcs	.+4      	; 0x10a <DIO_fpt+0x12>
 106:	82 e0       	ldi	r24, 0x02	; 2
 108:	08 95       	ret
 10a:	82 2f       	mov	r24, r18
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	02 c0       	rjmp	.+4      	; 0x114 <DIO_fpt+0x1c>
 110:	88 0f       	add	r24, r24
 112:	99 1f       	adc	r25, r25
 114:	4a 95       	dec	r20
 116:	e2 f7       	brpl	.-8      	; 0x110 <DIO_fpt+0x18>
 118:	28 2f       	mov	r18, r24
 11a:	31 30       	cpi	r19, 0x01	; 1
 11c:	89 f0       	breq	.+34     	; 0x140 <DIO_fpt+0x48>
 11e:	31 30       	cpi	r19, 0x01	; 1
 120:	28 f0       	brcs	.+10     	; 0x12c <DIO_fpt+0x34>
 122:	32 30       	cpi	r19, 0x02	; 2
 124:	b9 f0       	breq	.+46     	; 0x154 <DIO_fpt+0x5c>
 126:	33 30       	cpi	r19, 0x03	; 3
 128:	f1 f4       	brne	.+60     	; 0x166 <DIO_fpt+0x6e>
 12a:	1f c0       	rjmp	.+62     	; 0x16a <DIO_fpt+0x72>
 12c:	8a b3       	in	r24, 0x1a	; 26
 12e:	86 2b       	or	r24, r22
 130:	8a bb       	out	0x1a, r24	; 26
 132:	8b b3       	in	r24, 0x1b	; 27
 134:	26 23       	and	r18, r22
 136:	60 95       	com	r22
 138:	86 23       	and	r24, r22
 13a:	28 2b       	or	r18, r24
 13c:	2b bb       	out	0x1b, r18	; 27
 13e:	13 c0       	rjmp	.+38     	; 0x166 <DIO_fpt+0x6e>
 140:	87 b3       	in	r24, 0x17	; 23
 142:	86 2b       	or	r24, r22
 144:	87 bb       	out	0x17, r24	; 23
 146:	88 b3       	in	r24, 0x18	; 24
 148:	26 23       	and	r18, r22
 14a:	60 95       	com	r22
 14c:	86 23       	and	r24, r22
 14e:	28 2b       	or	r18, r24
 150:	28 bb       	out	0x18, r18	; 24
 152:	09 c0       	rjmp	.+18     	; 0x166 <DIO_fpt+0x6e>
 154:	84 b3       	in	r24, 0x14	; 20
 156:	86 2b       	or	r24, r22
 158:	84 bb       	out	0x14, r24	; 20
 15a:	85 b3       	in	r24, 0x15	; 21
 15c:	26 23       	and	r18, r22
 15e:	60 95       	com	r22
 160:	86 23       	and	r24, r22
 162:	28 2b       	or	r18, r24
 164:	25 bb       	out	0x15, r18	; 21
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	08 95       	ret
 16a:	82 b1       	in	r24, 0x02	; 2
 16c:	86 2b       	or	r24, r22
 16e:	82 b9       	out	0x02, r24	; 2
 170:	83 b1       	in	r24, 0x03	; 3
 172:	26 23       	and	r18, r22
 174:	60 95       	com	r22
 176:	86 23       	and	r24, r22
 178:	28 2b       	or	r18, r24
 17a:	23 b9       	out	0x03, r18	; 3
 17c:	80 e0       	ldi	r24, 0x00	; 0
 17e:	08 95       	ret

00000180 <DIO_fgt>:
 180:	f9 01       	movw	r30, r18
 182:	84 30       	cpi	r24, 0x04	; 4
 184:	10 f0       	brcs	.+4      	; 0x18a <DIO_fgt+0xa>
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	08 95       	ret
 18a:	48 30       	cpi	r20, 0x08	; 8
 18c:	10 f0       	brcs	.+4      	; 0x192 <DIO_fgt+0x12>
 18e:	82 e0       	ldi	r24, 0x02	; 2
 190:	08 95       	ret
 192:	81 30       	cpi	r24, 0x01	; 1
 194:	b9 f0       	breq	.+46     	; 0x1c4 <DIO_fgt+0x44>
 196:	81 30       	cpi	r24, 0x01	; 1
 198:	28 f0       	brcs	.+10     	; 0x1a4 <DIO_fgt+0x24>
 19a:	82 30       	cpi	r24, 0x02	; 2
 19c:	19 f1       	breq	.+70     	; 0x1e4 <DIO_fgt+0x64>
 19e:	83 30       	cpi	r24, 0x03	; 3
 1a0:	c1 f5       	brne	.+112    	; 0x212 <DIO_fgt+0x92>
 1a2:	39 c0       	rjmp	.+114    	; 0x216 <DIO_fgt+0x96>
 1a4:	8a b3       	in	r24, 0x1a	; 26
 1a6:	88 23       	and	r24, r24
 1a8:	29 f0       	breq	.+10     	; 0x1b4 <DIO_fgt+0x34>
 1aa:	9a b3       	in	r25, 0x1a	; 26
 1ac:	86 2f       	mov	r24, r22
 1ae:	80 95       	com	r24
 1b0:	89 23       	and	r24, r25
 1b2:	05 c0       	rjmp	.+10     	; 0x1be <DIO_fgt+0x3e>
 1b4:	8a b3       	in	r24, 0x1a	; 26
 1b6:	88 23       	and	r24, r24
 1b8:	19 f4       	brne	.+6      	; 0x1c0 <DIO_fgt+0x40>
 1ba:	86 2f       	mov	r24, r22
 1bc:	80 95       	com	r24
 1be:	8a bb       	out	0x1a, r24	; 26
 1c0:	89 b3       	in	r24, 0x19	; 25
 1c2:	1f c0       	rjmp	.+62     	; 0x202 <DIO_fgt+0x82>
 1c4:	87 b3       	in	r24, 0x17	; 23
 1c6:	88 23       	and	r24, r24
 1c8:	29 f0       	breq	.+10     	; 0x1d4 <DIO_fgt+0x54>
 1ca:	97 b3       	in	r25, 0x17	; 23
 1cc:	86 2f       	mov	r24, r22
 1ce:	80 95       	com	r24
 1d0:	89 23       	and	r24, r25
 1d2:	05 c0       	rjmp	.+10     	; 0x1de <DIO_fgt+0x5e>
 1d4:	87 b3       	in	r24, 0x17	; 23
 1d6:	88 23       	and	r24, r24
 1d8:	19 f4       	brne	.+6      	; 0x1e0 <DIO_fgt+0x60>
 1da:	86 2f       	mov	r24, r22
 1dc:	80 95       	com	r24
 1de:	87 bb       	out	0x17, r24	; 23
 1e0:	86 b3       	in	r24, 0x16	; 22
 1e2:	0f c0       	rjmp	.+30     	; 0x202 <DIO_fgt+0x82>
 1e4:	84 b3       	in	r24, 0x14	; 20
 1e6:	88 23       	and	r24, r24
 1e8:	29 f0       	breq	.+10     	; 0x1f4 <DIO_fgt+0x74>
 1ea:	94 b3       	in	r25, 0x14	; 20
 1ec:	86 2f       	mov	r24, r22
 1ee:	80 95       	com	r24
 1f0:	89 23       	and	r24, r25
 1f2:	05 c0       	rjmp	.+10     	; 0x1fe <DIO_fgt+0x7e>
 1f4:	84 b3       	in	r24, 0x14	; 20
 1f6:	88 23       	and	r24, r24
 1f8:	19 f4       	brne	.+6      	; 0x200 <DIO_fgt+0x80>
 1fa:	86 2f       	mov	r24, r22
 1fc:	80 95       	com	r24
 1fe:	84 bb       	out	0x14, r24	; 20
 200:	83 b3       	in	r24, 0x13	; 19
 202:	86 23       	and	r24, r22
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_fgt+0x8c>
 208:	95 95       	asr	r25
 20a:	87 95       	ror	r24
 20c:	4a 95       	dec	r20
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_fgt+0x88>
 210:	80 83       	st	Z, r24
 212:	80 e0       	ldi	r24, 0x00	; 0
 214:	08 95       	ret
 216:	82 b1       	in	r24, 0x02	; 2
 218:	88 23       	and	r24, r24
 21a:	29 f0       	breq	.+10     	; 0x226 <DIO_fgt+0xa6>
 21c:	92 b1       	in	r25, 0x02	; 2
 21e:	86 2f       	mov	r24, r22
 220:	80 95       	com	r24
 222:	89 23       	and	r24, r25
 224:	05 c0       	rjmp	.+10     	; 0x230 <DIO_fgt+0xb0>
 226:	82 b1       	in	r24, 0x02	; 2
 228:	88 23       	and	r24, r24
 22a:	19 f4       	brne	.+6      	; 0x232 <DIO_fgt+0xb2>
 22c:	86 2f       	mov	r24, r22
 22e:	80 95       	com	r24
 230:	82 b9       	out	0x02, r24	; 2
 232:	81 b1       	in	r24, 0x01	; 1
 234:	86 23       	and	r24, r22
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	02 c0       	rjmp	.+4      	; 0x23e <DIO_fgt+0xbe>
 23a:	95 95       	asr	r25
 23c:	87 95       	ror	r24
 23e:	4a 95       	dec	r20
 240:	e2 f7       	brpl	.-8      	; 0x23a <DIO_fgt+0xba>
 242:	80 83       	st	Z, r24
 244:	80 e0       	ldi	r24, 0x00	; 0
 246:	08 95       	ret

00000248 <TIM_set>:
 248:	12 be       	out	0x32, r1	; 50
 24a:	82 e0       	ldi	r24, 0x02	; 2
 24c:	87 bf       	out	0x37, r24	; 55
 24e:	88 ed       	ldi	r24, 0xD8	; 216
 250:	81 bf       	out	0x31, r24	; 49
 252:	83 b7       	in	r24, 0x33	; 51
 254:	8a 60       	ori	r24, 0x0A	; 10
 256:	83 bf       	out	0x33, r24	; 51
 258:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <ISR_Functioncounter>
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	08 95       	ret

00000260 <TIMISR_reg>:
 260:	20 91 29 01 	lds	r18, 0x0129	; 0x800129 <ISR_Functioncounter>
 264:	2a 30       	cpi	r18, 0x0A	; 10
 266:	10 f0       	brcs	.+4      	; 0x26c <TIMISR_reg+0xc>
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	08 95       	ret
 26c:	e2 2f       	mov	r30, r18
 26e:	f0 e0       	ldi	r31, 0x00	; 0
 270:	ee 0f       	add	r30, r30
 272:	ff 1f       	adc	r31, r31
 274:	ec 5e       	subi	r30, 0xEC	; 236
 276:	fe 4f       	sbci	r31, 0xFE	; 254
 278:	91 83       	std	Z+1, r25	; 0x01
 27a:	80 83       	st	Z, r24
 27c:	2f 5f       	subi	r18, 0xFF	; 255
 27e:	20 93 29 01 	sts	0x0129, r18	; 0x800129 <ISR_Functioncounter>
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	08 95       	ret

00000286 <__vector_15>:
 286:	1f 92       	push	r1
 288:	0f 92       	push	r0
 28a:	0f b6       	in	r0, 0x3f	; 63
 28c:	0f 92       	push	r0
 28e:	0b b6       	in	r0, 0x3b	; 59
 290:	0f 92       	push	r0
 292:	11 24       	eor	r1, r1
 294:	1f 93       	push	r17
 296:	2f 93       	push	r18
 298:	3f 93       	push	r19
 29a:	4f 93       	push	r20
 29c:	5f 93       	push	r21
 29e:	6f 93       	push	r22
 2a0:	7f 93       	push	r23
 2a2:	8f 93       	push	r24
 2a4:	9f 93       	push	r25
 2a6:	af 93       	push	r26
 2a8:	bf 93       	push	r27
 2aa:	ef 93       	push	r30
 2ac:	ff 93       	push	r31
 2ae:	10 e0       	ldi	r17, 0x00	; 0
 2b0:	0b c0       	rjmp	.+22     	; 0x2c8 <__vector_15+0x42>
 2b2:	e1 2f       	mov	r30, r17
 2b4:	f0 e0       	ldi	r31, 0x00	; 0
 2b6:	ee 0f       	add	r30, r30
 2b8:	ff 1f       	adc	r31, r31
 2ba:	ec 5e       	subi	r30, 0xEC	; 236
 2bc:	fe 4f       	sbci	r31, 0xFE	; 254
 2be:	01 90       	ld	r0, Z+
 2c0:	f0 81       	ld	r31, Z
 2c2:	e0 2d       	mov	r30, r0
 2c4:	09 95       	icall
 2c6:	1f 5f       	subi	r17, 0xFF	; 255
 2c8:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <ISR_Functioncounter>
 2cc:	18 17       	cp	r17, r24
 2ce:	88 f3       	brcs	.-30     	; 0x2b2 <__vector_15+0x2c>
 2d0:	ff 91       	pop	r31
 2d2:	ef 91       	pop	r30
 2d4:	bf 91       	pop	r27
 2d6:	af 91       	pop	r26
 2d8:	9f 91       	pop	r25
 2da:	8f 91       	pop	r24
 2dc:	7f 91       	pop	r23
 2de:	6f 91       	pop	r22
 2e0:	5f 91       	pop	r21
 2e2:	4f 91       	pop	r20
 2e4:	3f 91       	pop	r19
 2e6:	2f 91       	pop	r18
 2e8:	1f 91       	pop	r17
 2ea:	0f 90       	pop	r0
 2ec:	0b be       	out	0x3b, r0	; 59
 2ee:	0f 90       	pop	r0
 2f0:	0f be       	out	0x3f, r0	; 63
 2f2:	0f 90       	pop	r0
 2f4:	1f 90       	pop	r1
 2f6:	18 95       	reti

000002f8 <HMI_Transceiver_get>:
 2f8:	df 92       	push	r13
 2fa:	ef 92       	push	r14
 2fc:	ff 92       	push	r15
 2fe:	0f 93       	push	r16
 300:	1f 93       	push	r17
 302:	cf 93       	push	r28
 304:	df 93       	push	r29
 306:	08 2f       	mov	r16, r24
 308:	d6 2e       	mov	r13, r22
 30a:	e7 2e       	mov	r14, r23
 30c:	81 32       	cpi	r24, 0x21	; 33
 30e:	10 f0       	brcs	.+4      	; 0x314 <HMI_Transceiver_get+0x1c>
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	24 c0       	rjmp	.+72     	; 0x35c <HMI_Transceiver_get+0x64>
 314:	e6 d0       	rcall	.+460    	; 0x4e2 <PC_getchar>
 316:	8b 3a       	cpi	r24, 0xAB	; 171
 318:	01 f5       	brne	.+64     	; 0x35a <HMI_Transceiver_get+0x62>
 31a:	e3 d0       	rcall	.+454    	; 0x4e2 <PC_getchar>
 31c:	8b 3a       	cpi	r24, 0xAB	; 171
 31e:	e9 f4       	brne	.+58     	; 0x35a <HMI_Transceiver_get+0x62>
 320:	e0 d0       	rcall	.+448    	; 0x4e2 <PC_getchar>
 322:	8b 3a       	cpi	r24, 0xAB	; 171
 324:	d1 f4       	brne	.+52     	; 0x35a <HMI_Transceiver_get+0x62>
 326:	dd d0       	rcall	.+442    	; 0x4e2 <PC_getchar>
 328:	f8 2e       	mov	r15, r24
 32a:	18 2f       	mov	r17, r24
 32c:	8d 2d       	mov	r24, r13
 32e:	9e 2d       	mov	r25, r14
 330:	9c 01       	movw	r18, r24
 332:	e9 01       	movw	r28, r18
 334:	03 c0       	rjmp	.+6      	; 0x33c <HMI_Transceiver_get+0x44>
 336:	d5 d0       	rcall	.+426    	; 0x4e2 <PC_getchar>
 338:	89 93       	st	Y+, r24
 33a:	18 0f       	add	r17, r24
 33c:	9e 01       	movw	r18, r28
 33e:	2d 19       	sub	r18, r13
 340:	20 17       	cp	r18, r16
 342:	c8 f3       	brcs	.-14     	; 0x336 <HMI_Transceiver_get+0x3e>
 344:	ce d0       	rcall	.+412    	; 0x4e2 <PC_getchar>
 346:	f0 16       	cp	r15, r16
 348:	11 f0       	breq	.+4      	; 0x34e <HMI_Transceiver_get+0x56>
 34a:	83 e0       	ldi	r24, 0x03	; 3
 34c:	07 c0       	rjmp	.+14     	; 0x35c <HMI_Transceiver_get+0x64>
 34e:	81 17       	cp	r24, r17
 350:	11 f4       	brne	.+4      	; 0x356 <HMI_Transceiver_get+0x5e>
 352:	80 e0       	ldi	r24, 0x00	; 0
 354:	03 c0       	rjmp	.+6      	; 0x35c <HMI_Transceiver_get+0x64>
 356:	84 e0       	ldi	r24, 0x04	; 4
 358:	01 c0       	rjmp	.+2      	; 0x35c <HMI_Transceiver_get+0x64>
 35a:	82 e0       	ldi	r24, 0x02	; 2
 35c:	df 91       	pop	r29
 35e:	cf 91       	pop	r28
 360:	1f 91       	pop	r17
 362:	0f 91       	pop	r16
 364:	ff 90       	pop	r15
 366:	ef 90       	pop	r14
 368:	df 90       	pop	r13
 36a:	08 95       	ret

0000036c <HMI_Transceiver_put>:
 36c:	ef 92       	push	r14
 36e:	ff 92       	push	r15
 370:	0f 93       	push	r16
 372:	1f 93       	push	r17
 374:	cf 93       	push	r28
 376:	df 93       	push	r29
 378:	08 2f       	mov	r16, r24
 37a:	7b 01       	movw	r14, r22
 37c:	81 32       	cpi	r24, 0x21	; 33
 37e:	10 f0       	brcs	.+4      	; 0x384 <HMI_Transceiver_put+0x18>
 380:	81 e0       	ldi	r24, 0x01	; 1
 382:	16 c0       	rjmp	.+44     	; 0x3b0 <HMI_Transceiver_put+0x44>
 384:	8a ea       	ldi	r24, 0xAA	; 170
 386:	a9 d0       	rcall	.+338    	; 0x4da <PC_putchar>
 388:	8a ea       	ldi	r24, 0xAA	; 170
 38a:	a7 d0       	rcall	.+334    	; 0x4da <PC_putchar>
 38c:	8a ea       	ldi	r24, 0xAA	; 170
 38e:	a5 d0       	rcall	.+330    	; 0x4da <PC_putchar>
 390:	80 2f       	mov	r24, r16
 392:	a3 d0       	rcall	.+326    	; 0x4da <PC_putchar>
 394:	10 2f       	mov	r17, r16
 396:	e7 01       	movw	r28, r14
 398:	04 c0       	rjmp	.+8      	; 0x3a2 <HMI_Transceiver_put+0x36>
 39a:	88 81       	ld	r24, Y
 39c:	9e d0       	rcall	.+316    	; 0x4da <PC_putchar>
 39e:	89 91       	ld	r24, Y+
 3a0:	18 0f       	add	r17, r24
 3a2:	9e 01       	movw	r18, r28
 3a4:	2e 19       	sub	r18, r14
 3a6:	20 17       	cp	r18, r16
 3a8:	c0 f3       	brcs	.-16     	; 0x39a <HMI_Transceiver_put+0x2e>
 3aa:	81 2f       	mov	r24, r17
 3ac:	96 d0       	rcall	.+300    	; 0x4da <PC_putchar>
 3ae:	80 e0       	ldi	r24, 0x00	; 0
 3b0:	df 91       	pop	r29
 3b2:	cf 91       	pop	r28
 3b4:	1f 91       	pop	r17
 3b6:	0f 91       	pop	r16
 3b8:	ff 90       	pop	r15
 3ba:	ef 90       	pop	r14
 3bc:	08 95       	ret

000003be <ASA_M128_set>:
 3be:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 3c2:	91 e1       	ldi	r25, 0x11	; 17
 3c4:	99 b9       	out	0x09, r25	; 9
 3c6:	8a b1       	in	r24, 0x0a	; 10
 3c8:	88 61       	ori	r24, 0x18	; 24
 3ca:	8a b9       	out	0x0a, r24	; 10
 3cc:	e5 e9       	ldi	r30, 0x95	; 149
 3ce:	f0 e0       	ldi	r31, 0x00	; 0
 3d0:	80 81       	ld	r24, Z
 3d2:	86 60       	ori	r24, 0x06	; 6
 3d4:	80 83       	st	Z, r24
 3d6:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 3da:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 3de:	ea e9       	ldi	r30, 0x9A	; 154
 3e0:	f0 e0       	ldi	r31, 0x00	; 0
 3e2:	80 81       	ld	r24, Z
 3e4:	88 61       	ori	r24, 0x18	; 24
 3e6:	80 83       	st	Z, r24
 3e8:	ed e9       	ldi	r30, 0x9D	; 157
 3ea:	f0 e0       	ldi	r31, 0x00	; 0
 3ec:	80 81       	ld	r24, Z
 3ee:	86 60       	ori	r24, 0x06	; 6
 3f0:	80 83       	st	Z, r24
 3f2:	80 e0       	ldi	r24, 0x00	; 0
 3f4:	91 e0       	ldi	r25, 0x01	; 1
 3f6:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <__iob+0x3>
 3fa:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__iob+0x2>
 3fe:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <__iob+0x1>
 402:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__iob>
 406:	87 b3       	in	r24, 0x17	; 23
 408:	80 6e       	ori	r24, 0xE0	; 224
 40a:	87 bb       	out	0x17, r24	; 23
 40c:	80 e0       	ldi	r24, 0x00	; 0
 40e:	08 d0       	rcall	.+16     	; 0x420 <ASA_ID_set>
 410:	80 e0       	ldi	r24, 0x00	; 0
 412:	08 95       	ret

00000414 <ASA_ID_check>:
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	88 30       	cpi	r24, 0x08	; 8
 418:	08 f0       	brcs	.+2      	; 0x41c <ASA_ID_check+0x8>
 41a:	91 e0       	ldi	r25, 0x01	; 1
 41c:	89 2f       	mov	r24, r25
 41e:	08 95       	ret

00000420 <ASA_ID_set>:
 420:	98 2f       	mov	r25, r24
 422:	88 30       	cpi	r24, 0x08	; 8
 424:	10 f0       	brcs	.+4      	; 0x42a <ASA_ID_set+0xa>
 426:	81 e0       	ldi	r24, 0x01	; 1
 428:	08 95       	ret
 42a:	88 b3       	in	r24, 0x18	; 24
 42c:	92 95       	swap	r25
 42e:	99 0f       	add	r25, r25
 430:	90 7e       	andi	r25, 0xE0	; 224
 432:	8f 71       	andi	r24, 0x1F	; 31
 434:	89 2b       	or	r24, r25
 436:	88 bb       	out	0x18, r24	; 24
 438:	80 e0       	ldi	r24, 0x00	; 0
 43a:	08 95       	ret

0000043c <UART1_putchar>:
 43c:	98 2f       	mov	r25, r24
 43e:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 442:	85 ff       	sbrs	r24, 5
 444:	fc cf       	rjmp	.-8      	; 0x43e <UART1_putchar+0x2>
 446:	90 93 9c 00 	sts	0x009C, r25	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 44a:	83 eb       	ldi	r24, 0xB3	; 179
 44c:	92 e0       	ldi	r25, 0x02	; 2
 44e:	01 97       	sbiw	r24, 0x01	; 1
 450:	f1 f7       	brne	.-4      	; 0x44e <UART1_putchar+0x12>
 452:	08 95       	ret

00000454 <UART1_getchar>:
 454:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 458:	87 ff       	sbrs	r24, 7
 45a:	fc cf       	rjmp	.-8      	; 0x454 <UART1_getchar>
 45c:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 460:	08 95       	ret

00000462 <SPI_Transfer>:
 462:	8f b9       	out	0x0f, r24	; 15
 464:	77 9b       	sbis	0x0e, 7	; 14
 466:	fe cf       	rjmp	.-4      	; 0x464 <SPI_Transfer+0x2>
 468:	8f b1       	in	r24, 0x0f	; 15
 46a:	08 95       	ret

0000046c <SPI_Receive>:
 46c:	1f b8       	out	0x0f, r1	; 15
 46e:	77 9b       	sbis	0x0e, 7	; 14
 470:	fe cf       	rjmp	.-4      	; 0x46e <SPI_Receive+0x2>
 472:	8f b1       	in	r24, 0x0f	; 15
 474:	08 95       	ret

00000476 <ASA_putchar>:
 476:	1f 93       	push	r17
 478:	16 2f       	mov	r17, r22
 47a:	d2 df       	rcall	.-92     	; 0x420 <ASA_ID_set>
 47c:	8d e3       	ldi	r24, 0x3D	; 61
 47e:	93 e0       	ldi	r25, 0x03	; 3
 480:	01 97       	sbiw	r24, 0x01	; 1
 482:	f1 f7       	brne	.-4      	; 0x480 <ASA_putchar+0xa>
 484:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 488:	85 ff       	sbrs	r24, 5
 48a:	fc cf       	rjmp	.-8      	; 0x484 <ASA_putchar+0xe>
 48c:	10 93 9c 00 	sts	0x009C, r17	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 490:	83 eb       	ldi	r24, 0xB3	; 179
 492:	92 e0       	ldi	r25, 0x02	; 2
 494:	01 97       	sbiw	r24, 0x01	; 1
 496:	f1 f7       	brne	.-4      	; 0x494 <ASA_putchar+0x1e>
 498:	80 e0       	ldi	r24, 0x00	; 0
 49a:	1f 91       	pop	r17
 49c:	08 95       	ret

0000049e <ASA_getchar>:
 49e:	cf 93       	push	r28
 4a0:	df 93       	push	r29
 4a2:	eb 01       	movw	r28, r22
 4a4:	bd df       	rcall	.-134    	; 0x420 <ASA_ID_set>
 4a6:	8d e3       	ldi	r24, 0x3D	; 61
 4a8:	93 e0       	ldi	r25, 0x03	; 3
 4aa:	01 97       	sbiw	r24, 0x01	; 1
 4ac:	f1 f7       	brne	.-4      	; 0x4aa <ASA_getchar+0xc>
 4ae:	20 e0       	ldi	r18, 0x00	; 0
 4b0:	30 e0       	ldi	r19, 0x00	; 0
 4b2:	08 c0       	rjmp	.+16     	; 0x4c4 <ASA_getchar+0x26>
 4b4:	2f 5f       	subi	r18, 0xFF	; 255
 4b6:	3f 4f       	sbci	r19, 0xFF	; 255
 4b8:	8f ef       	ldi	r24, 0xFF	; 255
 4ba:	2f 3f       	cpi	r18, 0xFF	; 255
 4bc:	38 07       	cpc	r19, r24
 4be:	11 f4       	brne	.+4      	; 0x4c4 <ASA_getchar+0x26>
 4c0:	81 e0       	ldi	r24, 0x01	; 1
 4c2:	08 c0       	rjmp	.+16     	; 0x4d4 <ASA_getchar+0x36>
 4c4:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 4c8:	87 ff       	sbrs	r24, 7
 4ca:	f4 cf       	rjmp	.-24     	; 0x4b4 <ASA_getchar+0x16>
 4cc:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 4d0:	88 83       	st	Y, r24
 4d2:	80 e0       	ldi	r24, 0x00	; 0
 4d4:	df 91       	pop	r29
 4d6:	cf 91       	pop	r28
 4d8:	08 95       	ret

000004da <PC_putchar>:
 4da:	5d 9b       	sbis	0x0b, 5	; 11
 4dc:	fe cf       	rjmp	.-4      	; 0x4da <PC_putchar>
 4de:	8c b9       	out	0x0c, r24	; 12
 4e0:	08 95       	ret

000004e2 <PC_getchar>:
 4e2:	5f 9b       	sbis	0x0b, 7	; 11
 4e4:	fe cf       	rjmp	.-4      	; 0x4e2 <PC_getchar>
 4e6:	8c b1       	in	r24, 0x0c	; 12
 4e8:	08 95       	ret

000004ea <TWI_ERROR>:
 4ea:	84 e9       	ldi	r24, 0x94	; 148
 4ec:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 4f0:	08 95       	ret

000004f2 <TWI_Start>:
 4f2:	84 ea       	ldi	r24, 0xA4	; 164
 4f4:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 4f8:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 4fc:	87 ff       	sbrs	r24, 7
 4fe:	fc cf       	rjmp	.-8      	; 0x4f8 <TWI_Start+0x6>
 500:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 504:	88 7f       	andi	r24, 0xF8	; 248
 506:	88 30       	cpi	r24, 0x08	; 8
 508:	11 f4       	brne	.+4      	; 0x50e <TWI_Start+0x1c>
 50a:	80 e0       	ldi	r24, 0x00	; 0
 50c:	08 95       	ret
 50e:	84 e9       	ldi	r24, 0x94	; 148
 510:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 514:	81 e0       	ldi	r24, 0x01	; 1
 516:	08 95       	ret

00000518 <TWI_Stop>:
 518:	84 e9       	ldi	r24, 0x94	; 148
 51a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 51e:	08 95       	ret

00000520 <TWI_ReStart>:
 520:	84 ea       	ldi	r24, 0xA4	; 164
 522:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 526:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 52a:	87 ff       	sbrs	r24, 7
 52c:	fc cf       	rjmp	.-8      	; 0x526 <TWI_ReStart+0x6>
 52e:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 532:	88 7f       	andi	r24, 0xF8	; 248
 534:	80 31       	cpi	r24, 0x10	; 16
 536:	11 f4       	brne	.+4      	; 0x53c <TWI_ReStart+0x1c>
 538:	80 e0       	ldi	r24, 0x00	; 0
 53a:	08 95       	ret
 53c:	84 e9       	ldi	r24, 0x94	; 148
 53e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 542:	82 e0       	ldi	r24, 0x02	; 2
 544:	08 95       	ret

00000546 <TWI_SendSLAW>:
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	88 0f       	add	r24, r24
 54a:	99 1f       	adc	r25, r25
 54c:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 550:	84 e8       	ldi	r24, 0x84	; 132
 552:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 556:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 55a:	87 ff       	sbrs	r24, 7
 55c:	fc cf       	rjmp	.-8      	; 0x556 <TWI_SendSLAW+0x10>
 55e:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 562:	88 7f       	andi	r24, 0xF8	; 248
 564:	88 31       	cpi	r24, 0x18	; 24
 566:	19 f0       	breq	.+6      	; 0x56e <TWI_SendSLAW+0x28>
 568:	84 e9       	ldi	r24, 0x94	; 148
 56a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 56e:	08 95       	ret

00000570 <TWI_SendSLAR>:
 570:	88 0f       	add	r24, r24
 572:	8f 5f       	subi	r24, 0xFF	; 255
 574:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 578:	84 e8       	ldi	r24, 0x84	; 132
 57a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 57e:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 582:	87 ff       	sbrs	r24, 7
 584:	fc cf       	rjmp	.-8      	; 0x57e <TWI_SendSLAR+0xe>
 586:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 58a:	88 7f       	andi	r24, 0xF8	; 248
 58c:	80 34       	cpi	r24, 0x40	; 64
 58e:	19 f0       	breq	.+6      	; 0x596 <TWI_SendSLAR+0x26>
 590:	84 e9       	ldi	r24, 0x94	; 148
 592:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 596:	08 95       	ret

00000598 <TWI_TransmitData>:
 598:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 59c:	84 e8       	ldi	r24, 0x84	; 132
 59e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 5a2:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 5a6:	87 ff       	sbrs	r24, 7
 5a8:	fc cf       	rjmp	.-8      	; 0x5a2 <TWI_TransmitData+0xa>
 5aa:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 5ae:	88 7f       	andi	r24, 0xF8	; 248
 5b0:	88 32       	cpi	r24, 0x28	; 40
 5b2:	19 f0       	breq	.+6      	; 0x5ba <TWI_TransmitData+0x22>
 5b4:	84 e9       	ldi	r24, 0x94	; 148
 5b6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 5ba:	08 95       	ret

000005bc <TWI_ReceiveData>:
 5bc:	84 ec       	ldi	r24, 0xC4	; 196
 5be:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 5c2:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 5c6:	87 ff       	sbrs	r24, 7
 5c8:	fc cf       	rjmp	.-8      	; 0x5c2 <TWI_ReceiveData+0x6>
 5ca:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 5ce:	88 7f       	andi	r24, 0xF8	; 248
 5d0:	80 35       	cpi	r24, 0x50	; 80
 5d2:	19 f0       	breq	.+6      	; 0x5da <TWI_ReceiveData+0x1e>
 5d4:	84 e9       	ldi	r24, 0x94	; 148
 5d6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 5da:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 5de:	08 95       	ret

000005e0 <TWI_SendNoAck>:
 5e0:	84 e8       	ldi	r24, 0x84	; 132
 5e2:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 5e6:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 5ea:	87 ff       	sbrs	r24, 7
 5ec:	fc cf       	rjmp	.-8      	; 0x5e6 <TWI_SendNoAck+0x6>
 5ee:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 5f2:	88 7f       	andi	r24, 0xF8	; 248
 5f4:	88 35       	cpi	r24, 0x58	; 88
 5f6:	19 f0       	breq	.+6      	; 0x5fe <TWI_SendNoAck+0x1e>
 5f8:	84 e9       	ldi	r24, 0x94	; 148
 5fa:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 5fe:	08 95       	ret

00000600 <TWI_wr>:
 600:	ff 92       	push	r15
 602:	0f 93       	push	r16
 604:	1f 93       	push	r17
 606:	18 2f       	mov	r17, r24
 608:	06 2f       	mov	r16, r22
 60a:	f4 2e       	mov	r15, r20
 60c:	72 df       	rcall	.-284    	; 0x4f2 <TWI_Start>
 60e:	81 2f       	mov	r24, r17
 610:	9a df       	rcall	.-204    	; 0x546 <TWI_SendSLAW>
 612:	80 2f       	mov	r24, r16
 614:	c1 df       	rcall	.-126    	; 0x598 <TWI_TransmitData>
 616:	8f 2d       	mov	r24, r15
 618:	bf df       	rcall	.-130    	; 0x598 <TWI_TransmitData>
 61a:	84 e9       	ldi	r24, 0x94	; 148
 61c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 620:	1f 91       	pop	r17
 622:	0f 91       	pop	r16
 624:	ff 90       	pop	r15
 626:	08 95       	ret

00000628 <TWI_rd>:
 628:	0f 93       	push	r16
 62a:	1f 93       	push	r17
 62c:	08 2f       	mov	r16, r24
 62e:	16 2f       	mov	r17, r22
 630:	60 df       	rcall	.-320    	; 0x4f2 <TWI_Start>
 632:	80 2f       	mov	r24, r16
 634:	88 df       	rcall	.-240    	; 0x546 <TWI_SendSLAW>
 636:	81 2f       	mov	r24, r17
 638:	af df       	rcall	.-162    	; 0x598 <TWI_TransmitData>
 63a:	72 df       	rcall	.-284    	; 0x520 <TWI_ReStart>
 63c:	80 2f       	mov	r24, r16
 63e:	98 df       	rcall	.-208    	; 0x570 <TWI_SendSLAR>
 640:	bd df       	rcall	.-134    	; 0x5bc <TWI_ReceiveData>
 642:	18 2f       	mov	r17, r24
 644:	cd df       	rcall	.-102    	; 0x5e0 <TWI_SendNoAck>
 646:	84 e9       	ldi	r24, 0x94	; 148
 648:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 64c:	81 2f       	mov	r24, r17
 64e:	1f 91       	pop	r17
 650:	0f 91       	pop	r16
 652:	08 95       	ret

00000654 <TWI_initialize>:
 654:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 658:	08 95       	ret

0000065a <TWI_Write>:
 65a:	ef 92       	push	r14
 65c:	ff 92       	push	r15
 65e:	0f 93       	push	r16
 660:	1f 93       	push	r17
 662:	18 2f       	mov	r17, r24
 664:	06 2f       	mov	r16, r22
 666:	f7 2e       	mov	r15, r23
 668:	e4 2e       	mov	r14, r20
 66a:	43 df       	rcall	.-378    	; 0x4f2 <TWI_Start>
 66c:	81 30       	cpi	r24, 0x01	; 1
 66e:	09 f4       	brne	.+2      	; 0x672 <TWI_Write+0x18>
 670:	41 c0       	rjmp	.+130    	; 0x6f4 <TWI_Write+0x9a>
 672:	81 2f       	mov	r24, r17
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	88 0f       	add	r24, r24
 678:	99 1f       	adc	r25, r25
 67a:	90 70       	andi	r25, 0x00	; 0
 67c:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 680:	84 e8       	ldi	r24, 0x84	; 132
 682:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 686:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 68a:	87 ff       	sbrs	r24, 7
 68c:	fc cf       	rjmp	.-8      	; 0x686 <TWI_Write+0x2c>
 68e:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 692:	88 7f       	andi	r24, 0xF8	; 248
 694:	88 31       	cpi	r24, 0x18	; 24
 696:	39 f4       	brne	.+14     	; 0x6a6 <TWI_Write+0x4c>
 698:	80 2f       	mov	r24, r16
 69a:	9f 2d       	mov	r25, r15
 69c:	9c 01       	movw	r18, r24
 69e:	f9 01       	movw	r30, r18
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	24 e8       	ldi	r18, 0x84	; 132
 6a4:	1a c0       	rjmp	.+52     	; 0x6da <TWI_Write+0x80>
 6a6:	84 e9       	ldi	r24, 0x94	; 148
 6a8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 6ac:	83 e0       	ldi	r24, 0x03	; 3
 6ae:	22 c0       	rjmp	.+68     	; 0x6f4 <TWI_Write+0x9a>
 6b0:	80 81       	ld	r24, Z
 6b2:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 6b6:	20 93 74 00 	sts	0x0074, r18	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 6ba:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 6be:	87 ff       	sbrs	r24, 7
 6c0:	fc cf       	rjmp	.-8      	; 0x6ba <TWI_Write+0x60>
 6c2:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 6c6:	31 96       	adiw	r30, 0x01	; 1
 6c8:	88 7f       	andi	r24, 0xF8	; 248
 6ca:	88 32       	cpi	r24, 0x28	; 40
 6cc:	29 f0       	breq	.+10     	; 0x6d8 <TWI_Write+0x7e>
 6ce:	84 e9       	ldi	r24, 0x94	; 148
 6d0:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 6d4:	84 e0       	ldi	r24, 0x04	; 4
 6d6:	0e c0       	rjmp	.+28     	; 0x6f4 <TWI_Write+0x9a>
 6d8:	9f 5f       	subi	r25, 0xFF	; 255
 6da:	9e 15       	cp	r25, r14
 6dc:	48 f3       	brcs	.-46     	; 0x6b0 <TWI_Write+0x56>
 6de:	81 e0       	ldi	r24, 0x01	; 1
 6e0:	8e 15       	cp	r24, r14
 6e2:	20 f4       	brcc	.+8      	; 0x6ec <TWI_Write+0x92>
 6e4:	84 e9       	ldi	r24, 0x94	; 148
 6e6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 6ea:	03 c0       	rjmp	.+6      	; 0x6f2 <TWI_Write+0x98>
 6ec:	81 e0       	ldi	r24, 0x01	; 1
 6ee:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <write_to_read>
 6f2:	80 e0       	ldi	r24, 0x00	; 0
 6f4:	1f 91       	pop	r17
 6f6:	0f 91       	pop	r16
 6f8:	ff 90       	pop	r15
 6fa:	ef 90       	pop	r14
 6fc:	08 95       	ret

000006fe <TWI_Read>:
 6fe:	0f 93       	push	r16
 700:	1f 93       	push	r17
 702:	cf 93       	push	r28
 704:	df 93       	push	r29
 706:	08 2f       	mov	r16, r24
 708:	eb 01       	movw	r28, r22
 70a:	14 2f       	mov	r17, r20
 70c:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <write_to_read>
 710:	81 30       	cpi	r24, 0x01	; 1
 712:	39 f4       	brne	.+14     	; 0x722 <TWI_Read+0x24>
 714:	05 df       	rcall	.-502    	; 0x520 <TWI_ReStart>
 716:	82 30       	cpi	r24, 0x02	; 2
 718:	09 f4       	brne	.+2      	; 0x71c <TWI_Read+0x1e>
 71a:	73 c0       	rjmp	.+230    	; 0x802 <TWI_Read+0x104>
 71c:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <write_to_read>
 720:	01 c0       	rjmp	.+2      	; 0x724 <TWI_Read+0x26>
 722:	e7 de       	rcall	.-562    	; 0x4f2 <TWI_Start>
 724:	81 30       	cpi	r24, 0x01	; 1
 726:	09 f4       	brne	.+2      	; 0x72a <TWI_Read+0x2c>
 728:	6c c0       	rjmp	.+216    	; 0x802 <TWI_Read+0x104>
 72a:	80 2f       	mov	r24, r16
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	88 0f       	add	r24, r24
 730:	99 1f       	adc	r25, r25
 732:	81 60       	ori	r24, 0x01	; 1
 734:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 738:	84 e8       	ldi	r24, 0x84	; 132
 73a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 73e:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 742:	87 ff       	sbrs	r24, 7
 744:	fc cf       	rjmp	.-8      	; 0x73e <TWI_Read+0x40>
 746:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 74a:	88 7f       	andi	r24, 0xF8	; 248
 74c:	80 34       	cpi	r24, 0x40	; 64
 74e:	29 f0       	breq	.+10     	; 0x75a <TWI_Read+0x5c>
 750:	84 e9       	ldi	r24, 0x94	; 148
 752:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 756:	85 e0       	ldi	r24, 0x05	; 5
 758:	54 c0       	rjmp	.+168    	; 0x802 <TWI_Read+0x104>
 75a:	12 30       	cpi	r17, 0x02	; 2
 75c:	d0 f1       	brcs	.+116    	; 0x7d2 <TWI_Read+0xd4>
 75e:	40 e0       	ldi	r20, 0x00	; 0
 760:	21 2f       	mov	r18, r17
 762:	30 e0       	ldi	r19, 0x00	; 0
 764:	21 50       	subi	r18, 0x01	; 1
 766:	30 40       	sbci	r19, 0x00	; 0
 768:	54 ec       	ldi	r21, 0xC4	; 196
 76a:	17 c0       	rjmp	.+46     	; 0x79a <TWI_Read+0x9c>
 76c:	50 93 74 00 	sts	0x0074, r21	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 770:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 774:	87 ff       	sbrs	r24, 7
 776:	fc cf       	rjmp	.-8      	; 0x770 <TWI_Read+0x72>
 778:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 77c:	88 7f       	andi	r24, 0xF8	; 248
 77e:	80 35       	cpi	r24, 0x50	; 80
 780:	29 f0       	breq	.+10     	; 0x78c <TWI_Read+0x8e>
 782:	84 e9       	ldi	r24, 0x94	; 148
 784:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 788:	86 e0       	ldi	r24, 0x06	; 6
 78a:	3b c0       	rjmp	.+118    	; 0x802 <TWI_Read+0x104>
 78c:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 790:	fe 01       	movw	r30, r28
 792:	e4 0f       	add	r30, r20
 794:	f1 1d       	adc	r31, r1
 796:	80 83       	st	Z, r24
 798:	4f 5f       	subi	r20, 0xFF	; 255
 79a:	84 2f       	mov	r24, r20
 79c:	90 e0       	ldi	r25, 0x00	; 0
 79e:	82 17       	cp	r24, r18
 7a0:	93 07       	cpc	r25, r19
 7a2:	24 f3       	brlt	.-56     	; 0x76c <TWI_Read+0x6e>
 7a4:	84 e8       	ldi	r24, 0x84	; 132
 7a6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 7aa:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 7ae:	87 ff       	sbrs	r24, 7
 7b0:	fc cf       	rjmp	.-8      	; 0x7aa <TWI_Read+0xac>
 7b2:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 7b6:	88 7f       	andi	r24, 0xF8	; 248
 7b8:	88 35       	cpi	r24, 0x58	; 88
 7ba:	29 f0       	breq	.+10     	; 0x7c6 <TWI_Read+0xc8>
 7bc:	84 e9       	ldi	r24, 0x94	; 148
 7be:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 7c2:	87 e0       	ldi	r24, 0x07	; 7
 7c4:	1e c0       	rjmp	.+60     	; 0x802 <TWI_Read+0x104>
 7c6:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 7ca:	c1 0f       	add	r28, r17
 7cc:	d1 1d       	adc	r29, r1
 7ce:	21 97       	sbiw	r28, 0x01	; 1
 7d0:	13 c0       	rjmp	.+38     	; 0x7f8 <TWI_Read+0xfa>
 7d2:	84 e8       	ldi	r24, 0x84	; 132
 7d4:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 7d8:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 7dc:	87 ff       	sbrs	r24, 7
 7de:	fc cf       	rjmp	.-8      	; 0x7d8 <TWI_Read+0xda>
 7e0:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 7e4:	88 7f       	andi	r24, 0xF8	; 248
 7e6:	88 35       	cpi	r24, 0x58	; 88
 7e8:	29 f0       	breq	.+10     	; 0x7f4 <TWI_Read+0xf6>
 7ea:	84 e9       	ldi	r24, 0x94	; 148
 7ec:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 7f0:	88 e0       	ldi	r24, 0x08	; 8
 7f2:	07 c0       	rjmp	.+14     	; 0x802 <TWI_Read+0x104>
 7f4:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 7f8:	88 83       	st	Y, r24
 7fa:	84 e9       	ldi	r24, 0x94	; 148
 7fc:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 800:	80 e0       	ldi	r24, 0x00	; 0
 802:	df 91       	pop	r29
 804:	cf 91       	pop	r28
 806:	1f 91       	pop	r17
 808:	0f 91       	pop	r16
 80a:	08 95       	ret

0000080c <PWM1_init>:
unsigned char USART_Receive( void ){
	/* Wait for data to be received */
	while ( !( UCSR1A & (1<<RXC1)) );
	/* Get and return received data from buffer */
	return UDR1;
}
 80c:	82 e8       	ldi	r24, 0x82	; 130
 80e:	8f bd       	out	0x2f, r24	; 47
 810:	89 e1       	ldi	r24, 0x19	; 25
 812:	8e bd       	out	0x2e, r24	; 46
 814:	82 e2       	ldi	r24, 0x22	; 34
 816:	91 e0       	ldi	r25, 0x01	; 1
 818:	97 bd       	out	0x27, r25	; 39
 81a:	86 bd       	out	0x26, r24	; 38
 81c:	81 e9       	ldi	r24, 0x91	; 145
 81e:	90 e0       	ldi	r25, 0x00	; 0
 820:	9b bd       	out	0x2b, r25	; 43
 822:	8a bd       	out	0x2a, r24	; 42
 824:	08 95       	ret

00000826 <USART_Init>:
 826:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 82a:	89 b9       	out	0x09, r24	; 9
 82c:	88 e1       	ldi	r24, 0x18	; 24
 82e:	8a b9       	out	0x0a, r24	; 10
 830:	8e e0       	ldi	r24, 0x0E	; 14
 832:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 836:	08 95       	ret

00000838 <USART_Transmit>:
 838:	5d 9b       	sbis	0x0b, 5	; 11
 83a:	fe cf       	rjmp	.-4      	; 0x838 <USART_Transmit>
 83c:	8c b9       	out	0x0c, r24	; 12
 83e:	08 95       	ret

00000840 <main>:

int main(void)
{
	DDRB|=0x20;
 840:	bd 9a       	sbi	0x17, 5	; 23
	char Tr=0x55,data1;
	ASA_M128_set();
 842:	bd dd       	rcall	.-1158   	; 0x3be <ASA_M128_set>
	PWM1_init();
 844:	e3 df       	rcall	.-58     	; 0x80c <PWM1_init>
 846:	8f e8       	ldi	r24, 0x8F	; 143
	USART_Init(MYUBRR);
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	ed df       	rcall	.-38     	; 0x826 <USART_Init>
 84c:	8e e0       	ldi	r24, 0x0E	; 14
	printf("start\n");
 84e:	91 e0       	ldi	r25, 0x01	; 1
 850:	0b d0       	rcall	.+22     	; 0x868 <puts>
 852:	11 9a       	sbi	0x02, 1	; 2
	//DDRD|=0x08;
	DDRE|= 0x02;
 854:	19 9a       	sbi	0x03, 1	; 3
	
	while (1)
	{
		PORTE |=0x02;
 856:	80 e0       	ldi	r24, 0x00	; 0
		USART_Transmit(0);_delay_ms(200);
 858:	ef df       	rcall	.-34     	; 0x838 <USART_Transmit>
 85a:	8f e4       	ldi	r24, 0x4F	; 79
 85c:	93 ec       	ldi	r25, 0xC3	; 195
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 85e:	01 97       	sbiw	r24, 0x01	; 1
 860:	f1 f7       	brne	.-4      	; 0x85e <main+0x1e>
 862:	00 c0       	rjmp	.+0      	; 0x864 <main+0x24>
 864:	00 00       	nop
 866:	f6 cf       	rjmp	.-20     	; 0x854 <main+0x14>

00000868 <puts>:
 868:	0f 93       	push	r16
 86a:	1f 93       	push	r17
 86c:	cf 93       	push	r28
 86e:	df 93       	push	r29
 870:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <__iob+0x2>
 874:	f0 91 2d 01 	lds	r31, 0x012D	; 0x80012d <__iob+0x3>
 878:	23 81       	ldd	r18, Z+3	; 0x03
 87a:	21 ff       	sbrs	r18, 1
 87c:	1b c0       	rjmp	.+54     	; 0x8b4 <puts+0x4c>
 87e:	8c 01       	movw	r16, r24
 880:	d0 e0       	ldi	r29, 0x00	; 0
 882:	c0 e0       	ldi	r28, 0x00	; 0
 884:	f8 01       	movw	r30, r16
 886:	81 91       	ld	r24, Z+
 888:	8f 01       	movw	r16, r30
 88a:	60 91 2c 01 	lds	r22, 0x012C	; 0x80012c <__iob+0x2>
 88e:	70 91 2d 01 	lds	r23, 0x012D	; 0x80012d <__iob+0x3>
 892:	db 01       	movw	r26, r22
 894:	18 96       	adiw	r26, 0x08	; 8
 896:	ed 91       	ld	r30, X+
 898:	fc 91       	ld	r31, X
 89a:	19 97       	sbiw	r26, 0x09	; 9
 89c:	88 23       	and	r24, r24
 89e:	31 f0       	breq	.+12     	; 0x8ac <puts+0x44>
 8a0:	09 95       	icall
 8a2:	89 2b       	or	r24, r25
 8a4:	79 f3       	breq	.-34     	; 0x884 <puts+0x1c>
 8a6:	df ef       	ldi	r29, 0xFF	; 255
 8a8:	cf ef       	ldi	r28, 0xFF	; 255
 8aa:	ec cf       	rjmp	.-40     	; 0x884 <puts+0x1c>
 8ac:	8a e0       	ldi	r24, 0x0A	; 10
 8ae:	09 95       	icall
 8b0:	89 2b       	or	r24, r25
 8b2:	19 f0       	breq	.+6      	; 0x8ba <puts+0x52>
 8b4:	8f ef       	ldi	r24, 0xFF	; 255
 8b6:	9f ef       	ldi	r25, 0xFF	; 255
 8b8:	02 c0       	rjmp	.+4      	; 0x8be <puts+0x56>
 8ba:	8d 2f       	mov	r24, r29
 8bc:	9c 2f       	mov	r25, r28
 8be:	df 91       	pop	r29
 8c0:	cf 91       	pop	r28
 8c2:	1f 91       	pop	r17
 8c4:	0f 91       	pop	r16
 8c6:	08 95       	ret

000008c8 <_exit>:
 8c8:	f8 94       	cli

000008ca <__stop_program>:
 8ca:	ff cf       	rjmp	.-2      	; 0x8ca <__stop_program>
